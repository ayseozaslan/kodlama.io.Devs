package Kodlama.io.Devs.Demo.wepApi;

import java.util.List;

import Kodlama.io.Devs.Demo.dataAccess.abstracts.ProgrammingLanguageRepository;
import Kodlama.io.Devs.Demo.entities.concretes.ProgrammingLanguage;

public class not {

	private ProgrammingLanguageRepository programmingLanguageRepository;
	  //data accessin absytract ını kullanacagı için private repository
		@Override
		public List<ProgrammingLanguage> getAll() {
		
			return programmingLanguageRepository.getAll();
		}
		

		public ProgrammingLanguageManager(ProgrammingLanguageRepository programmingLanguageRepository) {
			
			this.programmingLanguageRepository = programmingLanguageRepository;
		}


		@Override
		public void add(ProgrammingLanguage languages) throws Exception  {
			if(languages==null) {
				throw new Exception("The programming language cannot be passed empty");
				
				
			}
			for(ProgrammingLanguage l1:programmingLanguageRepository.getAll()) {
				if(l1.getName()==l1.getName()) {
					throw new Exception("names cannot be repeated");
				}
			}
			
			
		}

		@Override
		public void delete(int id) {
			this.programmingLanguageRepository.delete(id);
			
		}

		@Override
		public void update(int id, String name) {
		
			this.programmingLanguageRepository.update(id,name);
		}

		@Override
		public ProgrammingLanguage getById(int id) {
			this.programmingLanguageRepository.getById(id);
			return null;
		}

	}

}
